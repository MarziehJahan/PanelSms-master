// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Panel.DAL;

namespace Panel.DAL.Migrations
{
    [DbContext(typeof(PanelSimorghContext))]
    [Migration("20201117101009_NotAllowedNull")]
    partial class NotAllowedNull
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Panel.DAL.Acquaintance", b =>
                {
                    b.Property<int>("AcquaintanceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcquaintanceDesc");

                    b.HasKey("AcquaintanceId");

                    b.ToTable("Acquaintances");
                });

            modelBuilder.Entity("Panel.DAL.Condition", b =>
                {
                    b.Property<int>("ConditionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConDescription");

                    b.HasKey("ConditionId");

                    b.ToTable("Conditions");
                });

            modelBuilder.Entity("Panel.DAL.PanelSimorgh", b =>
                {
                    b.Property<int>("PanelSimorghId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("BirthNo");

                    b.Property<int?>("ConditionId");

                    b.Property<string>("Email");

                    b.Property<string>("FName");

                    b.Property<string>("Name");

                    b.Property<int>("NationalCode");

                    b.Property<int>("PhoneCall");

                    b.Property<int>("PhoneNumber");

                    b.Property<int>("PostalCode");

                    b.Property<int?>("TermsAcceptanceId");

                    b.Property<int?>("UserPanelId");

                    b.Property<string>("Username");

                    b.Property<int?>("acquaintanceTypeAcquaintanceId");

                    b.HasKey("PanelSimorghId");

                    b.HasIndex("ConditionId");

                    b.HasIndex("TermsAcceptanceId");

                    b.HasIndex("UserPanelId");

                    b.HasIndex("acquaintanceTypeAcquaintanceId");

                    b.ToTable("Panels");
                });

            modelBuilder.Entity("Panel.DAL.TermsAcceptance", b =>
                {
                    b.Property<int>("TermsAcceptanceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TermsAcceptanceDesc");

                    b.HasKey("TermsAcceptanceId");

                    b.ToTable("Terms");
                });

            modelBuilder.Entity("Panel.DAL.UserPanel", b =>
                {
                    b.Property<int>("UserPanelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserPanelDescription");

                    b.HasKey("UserPanelId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Panel.DAL.PanelSimorgh", b =>
                {
                    b.HasOne("Panel.DAL.Condition", "Con")
                        .WithMany()
                        .HasForeignKey("ConditionId");

                    b.HasOne("Panel.DAL.TermsAcceptance", "terms")
                        .WithMany()
                        .HasForeignKey("TermsAcceptanceId");

                    b.HasOne("Panel.DAL.UserPanel", "userpanel")
                        .WithMany()
                        .HasForeignKey("UserPanelId");

                    b.HasOne("Panel.DAL.Acquaintance", "acquaintanceType")
                        .WithMany()
                        .HasForeignKey("acquaintanceTypeAcquaintanceId");
                });
#pragma warning restore 612, 618
        }
    }
}
